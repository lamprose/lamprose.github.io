<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>离司</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lipses.github.io/"/>
  <updated>2019-02-10T07:02:32.806Z</updated>
  <id>https://lipses.github.io/</id>
  
  <author>
    <name>lipses</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git</title>
    <link href="https://lipses.github.io/development/git/"/>
    <id>https://lipses.github.io/development/git/</id>
    <published>2019-01-31T11:47:41.000Z</published>
    <updated>2019-02-10T07:02:32.806Z</updated>
    
    <content type="html"><![CDATA[<p>实际项目开发中，我们经常会用一些版本控制器来托管自己的代码，今天就来总结下Git的相关用法<a id="more"></a></p><h1 id="git工具下载安装"><a href="#git工具下载安装" class="headerlink" title="git工具下载安装"></a>git工具下载安装</h1><h1 id="git命令使用详解"><a href="#git命令使用详解" class="headerlink" title="git命令使用详解"></a>git命令使用详解</h1><h2 id="git基本信息配置"><a href="#git基本信息配置" class="headerlink" title="git基本信息配置"></a>git基本信息配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git  config -- global  user.name  &apos;你再github上注册的用户名&apos;;//设置用户名</span><br><span class="line">git  config -- global  user.email  &apos;注册时候的邮箱&apos;;         //设置用户邮箱</span><br><span class="line">git config --list          //配置ok之后，我们用如下命令来看看是否配置成功</span><br></pre></td></tr></table></figure><h2 id="SSH密钥创建"><a href="#SSH密钥创建" class="headerlink" title="SSH密钥创建"></a>SSH密钥创建</h2><h2 id="初始化一个git仓库"><a href="#初始化一个git仓库" class="headerlink" title="初始化一个git仓库"></a>初始化一个git仓库</h2><ol><li>创建文件夹<ul><li>方法一:可以鼠标右键&gt;点击新建文件夹<floder name=""></floder></li><li>方法二:使用命令<code>mkdir &lt;floder name&gt;</code></li></ul></li><li>在文件夹内初始化git<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &lt;floder name&gt; //进入刚创建的文件夹目录</span><br><span class="line">git init        //使用git初始化该文件夹</span><br></pre></td></tr></table></figure></li></ol><h2 id="向git仓库里添加文件"><a href="#向git仓库里添加文件" class="headerlink" title="向git仓库里添加文件"></a>向git仓库里添加文件</h2><ul><li>方法一:直接在该文件夹内右键鼠标创建文件或文件夹</li><li>方法二:使用命令<code>touch &lt;file name&gt;</code>创建文件</li></ul><h2 id="git克隆远程仓库"><a href="#git克隆远程仓库" class="headerlink" title="git克隆远程仓库"></a>git克隆远程仓库</h2><h3 id="克隆默认分支"><a href="#克隆默认分支" class="headerlink" title="克隆默认分支"></a>克隆默认分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;仓库地址&gt;</span><br></pre></td></tr></table></figure><h3 id="克隆指定分支"><a href="#克隆指定分支" class="headerlink" title="克隆指定分支"></a>克隆指定分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b &lt;仓库指定分支&gt; &lt;仓库地址&gt;</span><br></pre></td></tr></table></figure><h2 id="git本地仓库同步到远程仓库"><a href="#git本地仓库同步到远程仓库" class="headerlink" title="git本地仓库同步到远程仓库"></a><span id="sync">git本地仓库同步到远程仓库</span></h2><ol><li><p>查看仓库状态:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure></li><li><p>添加到暂存区:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add &lt;文件名&gt; //若是添加所有文件直接输入git add .</span><br></pre></td></tr></table></figure></li><li><p>提交到本地仓库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m `&lt;提交信息&gt;`</span><br></pre></td></tr></table></figure></li><li><p>由本地仓库push到远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push  //上传到指定分支git push origin &lt;指定分支&gt;</span><br></pre></td></tr></table></figure></li></ol><p><strong><em>错误解决方法:</em></strong>  </p><ol><li><p>出现提交错误信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m `&lt;提交信息&gt;`</span><br><span class="line">fatal: could not open `.git/COMMIT_EDITMSG`: Permisssion  denide</span><br></pre></td></tr></table></figure><p>解决:这是通过Git GUI进行提交时发生的错误，由 .git 文件夹中的文件被设为“只读”所致，将 .git 文件夹下的所有文件、文件夹及其子文件的只读属性去掉即可.</p></li><li>如果出现无法同步或没有权限<br>解决:用户名和密码一定要和github上的一致.<br><img src="https://github.com/lipses/image_hosting/raw/blog/git_1.png" alt=""></li></ol><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><h3 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br><span class="line">* hexo    //显示我们正处于hexo分支下</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master//显示默认分支</span><br><span class="line">  remotes/origin/hexo</span><br><span class="line">  remotes/origin/master//其他两个分支</span><br></pre></td></tr></table></figure><h3 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;创建分支&gt;</span><br></pre></td></tr></table></figure><p><code>git checkout</code>命令加上<code>-b</code>参数表示创建并切换,相当于以下两条命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch &lt;创建分支&gt;</span><br><span class="line">git checkout &lt;创建分支&gt;</span><br></pre></td></tr></table></figure></p><p>然后可以使用<code>git branch -a</code>查看当前分支,验证是否创建成功.<br>最后再<a href="#sync">同步到远程仓库</a>即可</p><h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete &lt;指定分支&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实际项目开发中，我们经常会用一些版本控制器来托管自己的代码，今天就来总结下Git的相关用法
    
    </summary>
    
      <category term="开发" scheme="https://lipses.github.io/categories/development/"/>
    
    
      <category term="github" scheme="https://lipses.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Python中pip的使用</title>
    <link href="https://lipses.github.io/development/pip/"/>
    <id>https://lipses.github.io/development/pip/</id>
    <published>2019-01-30T07:38:01.000Z</published>
    <updated>2019-02-10T07:02:32.810Z</updated>
    
    <content type="html"><![CDATA[<p>在python的学习过程中，肯定会遇到很多安装模块的地方，可以使用<a href="http://blog.csdn.net/winterto1990/article/details/47453211" target="_blank" rel="noopener">easy_install</a>安装，但是easy_install相对于pip而言，最大的缺陷就是它所安装的模块是不能够卸载的，其他功能是和pip一样的。<br><a id="more"></a></p><h1 id="下载安装pip"><a href="#下载安装pip" class="headerlink" title="下载安装pip"></a>下载安装pip</h1><h2 id="下载pip"><a href="#下载pip" class="headerlink" title="下载pip"></a>下载pip</h2><p>下载pip安装py脚本 <a href="https://bootstrap.pypa.io/get-pip.py" target="_blank" rel="noopener">右键另存为</a><br>或者直接运行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br></pre></td></tr></table></figure></p><h2 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python get-pip.py</span><br></pre></td></tr></table></figure><h1 id="pip使用详解"><a href="#pip使用详解" class="headerlink" title="pip使用详解"></a>pip使用详解</h1><h2 id="pip安装模块包"><a href="#pip安装模块包" class="headerlink" title="pip安装模块包"></a>pip安装模块包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install &lt;package name&gt;  //使用命令安装</span><br><span class="line">[...]</span><br><span class="line">successfully installed &lt;package-name&gt;</span><br></pre></td></tr></table></figure><h2 id="pip查看已安装的包列表"><a href="#pip查看已安装的包列表" class="headerlink" title="pip查看已安装的包列表"></a>pip查看已安装的包列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip list //显示已安装包列表</span><br><span class="line">Package Version</span><br><span class="line">------- -------</span><br><span class="line">[...]</span><br></pre></td></tr></table></figure><h2 id="pip检查那些包需要更新"><a href="#pip检查那些包需要更新" class="headerlink" title="pip检查那些包需要更新"></a>pip检查那些包需要更新</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip list --outdated //显示需要更新的包</span><br><span class="line">Package Version Latest  Type</span><br><span class="line">------- ------- ------  -----</span><br><span class="line">[...]</span><br></pre></td></tr></table></figure><h2 id="pip更新包"><a href="#pip更新包" class="headerlink" title="pip更新包"></a>pip更新包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade &lt;package name&gt;</span><br><span class="line">[...]</span><br><span class="line">Installing collected packages: &lt;package name&gt;</span><br><span class="line">  Found existing installation: &lt;old version package name&gt;</span><br><span class="line">    Uninstalling &lt;old version package name&gt;</span><br><span class="line">      Successfully uninstalled &lt;new version package name&gt;</span><br><span class="line">Successfully installed &lt;new version package name&gt;</span><br></pre></td></tr></table></figure><h2 id="pip卸载包"><a href="#pip卸载包" class="headerlink" title="pip卸载包"></a>pip卸载包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip uninstall &lt;package name&gt;</span><br><span class="line">Uninstalling &lt;package name&gt;:</span><br><span class="line">  Would remove:</span><br><span class="line">    [,,,]</span><br><span class="line">Proceed (y/n)?</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在python的学习过程中，肯定会遇到很多安装模块的地方，可以使用&lt;a href=&quot;http://blog.csdn.net/winterto1990/article/details/47453211&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;easy_install&lt;/a&gt;安装，但是easy_install相对于pip而言，最大的缺陷就是它所安装的模块是不能够卸载的，其他功能是和pip一样的。&lt;br&gt;
    
    </summary>
    
      <category term="开发" scheme="https://lipses.github.io/categories/development/"/>
    
    
      <category term="python" scheme="https://lipses.github.io/tags/python/"/>
    
      <category term="爬虫" scheme="https://lipses.github.io/tags/reptile/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github搭建博客</title>
    <link href="https://lipses.github.io/share/hexo-establish/"/>
    <id>https://lipses.github.io/share/hexo-establish/</id>
    <published>2019-01-25T07:40:17.000Z</published>
    <updated>2019-02-10T07:02:32.802Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/lipses/image_hosting/raw/blog/hexo_head.png" alt="hexo_head.png"></p><h1 id="Github-Hexo搭建博客"><a href="#Github-Hexo搭建博客" class="headerlink" title="Github+Hexo搭建博客"></a>Github+Hexo搭建博客</h1><a id="more"></a><h2 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h2><h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><ol><li><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a>下载并安装</li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a>下载并安装</li><li>安装Hexo，在命令行（即Git Bash）内输入命令：<br><code>$ npm install -g hexo-cli</code></li><li><p>初始化Hexo，并安装其依赖包<br>在命令行（即Git Bash）中输入命令： </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;floder&gt;</span><br><span class="line">$ cd &lt;floder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p> 新建完成后，在路径下（即<floder>），会产生以下文件和文件夹</floder></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p> <strong><em>注：</em></strong></p><ul><li>hexo相关命令均在站点目录下，用Git Bash运行。</li><li>站点配置文件：站点目录下的<code>_config.yml。   ​ 路径为</code><folder>_config.yml`</folder></li><li>主题配置文件：站点目录下的themes文件夹下的，主题文件夹下的<code>_config.yml</code>。<br>​ 路径为<code>&lt;folder&gt;\themes\&lt;主题文件夹&gt;\_config.yml</code></li></ul></li><li><p>启动服务器。在路径下，命令行（即Git Bash）输入以下命令，运行即可：<br><code>hexo server //也可简写为 hexo s</code></p></li><li>浏览器访问：<code>http://localhost:4000/</code></li></ol><h2 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h2><h3 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h3><p>Hexo默认主题为landscape，推荐以下主题：</p><ol><li><a href="">snippet</a></li><li><a href="">next</a></li><li><a href="">BlueLake</a></li><li><a href="">Jsimple</a></li></ol><p>更多主题详见(<a href="https://github.com/search?q=hexo-theme" target="_blank" rel="noopener">https://github.com/search?q=hexo-theme</a>)</p><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><ol><li>下载主题</li><li>将下载好的主题文件夹复制到站点目录下的<code>themes</code>文件夹下。</li><li>更改站点配置文件<code>_config.yml</code>的theme字段，更改为主题文件夹名称： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: &lt;主题文件夹的名称&gt;</span><br></pre></td></tr></table></figure></li></ol><h3 id="主题优化-1"><a href="#主题优化-1" class="headerlink" title="主题优化"></a>主题优化</h3><h4 id="添加背景图"><a href="#添加背景图" class="headerlink" title="添加背景图"></a>添加背景图</h4><p>在 <code>themes/&lt;thenme floder&gt;/source/css/_custom/custom.styl</code> 中添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    background:url(/images/bg.jpg); //背景图片所在目录</span><br><span class="line">    background-size:cover;</span><br><span class="line">    background-repeat:no-repeat;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-position:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="修改Logo字体"><a href="#修改Logo字体" class="headerlink" title="修改Logo字体"></a>修改Logo字体</h4><p>在 <code>themes/&lt;theme floder&gt;/source/css/_custom/custom.styl</code> 中添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">        font-family: Zitiming;</span><br><span class="line">        src: url(&apos;/fonts/Zitiming.ttf&apos;);</span><br><span class="line">    &#125;//导入自定义字体</span><br><span class="line">    .site-title &#123;</span><br><span class="line">        font-size: 40px !important;</span><br><span class="line">    font-family: &apos;Zitiming&apos; !important;</span><br><span class="line">    &#125;//应用字体到Logo</span><br></pre></td></tr></table></figure></p><h4 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h4><p>打开<code>themes/&lt;theme floder&gt;/source/css/_custom/custom.styl</code>,在里面写下如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      cursor: url(&quot;/images/cursor.ico&quot;),auto!important //将鼠标样式icon图片放置于themes\next\source\images目录下</span><br><span class="line">  &#125;</span><br><span class="line">  :active &#123;</span><br><span class="line">      cursor: url(&quot;/images/cursor_active.ico&quot;),auto!important //将鼠标激活样式icon图片放置于themes\next\source\images目录下</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p><strong><em>注：</em></strong></p><ul><li>鼠标样式图片格式必须为icon</li></ul><h4 id="修改访问URL路径"><a href="#修改访问URL路径" class="headerlink" title="修改访问URL路径"></a>修改访问URL路径</h4><p>默认情况下访问URL路径为：<code>domain/2019/01/23/hexo-establish</code>,修改为<code>domain/share/hexo-establish</code>。 编辑 Hexo 站点下的<code>_config.yml</code>文件，修改其中的<code>permalink</code>字段：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :category/:title/</span><br></pre></td></tr></table></figure></p><h4 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h4><ol><li><p>安装插件</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p> 然后在需要置顶的文章的Front-matter中加上top即可：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 2019</span><br><span class="line">date: 2019-01-23 16:10:03</span><br><span class="line">top: 10</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>设置置顶标志<br>打开：<code>/themes/&lt;theme floder&gt;/layout/_macro/post.swig</code>，定位到<code>&lt;div class=&quot;post-meta&quot;&gt;</code>标签下,插入以下代码即可：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span><br><span class="line">  &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">  &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a><a href="#在右上角或者左上角实现fork-me-on-github" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h4><ol><li>选择样式<a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">GitHub Ribbons</a>,</li><li>修改图片跳转链接,将<code>&lt;a href=&quot;https://github.com/you&quot;&gt;</code>中的链接换为自己Github链接： </li><li>打开 <code>themes/next/layout/_layout.swig</code> 文件，把代码复制到<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下面。</li></ol><h3 id="插件配置"><a href="#插件配置" class="headerlink" title="插件配置"></a>插件配置</h3><h4 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h4><table><thead><tr><th style="text-align:left"></th><th style="text-align:center">推荐指数</th><th style="text-align:left">优点</th><th style="text-align:left">缺点</th></tr></thead><tbody><tr><td style="text-align:left"><a href="">Valine</a></td><td style="text-align:center">4</td><td style="text-align:left">每天30000条评论，10GB的储存</td><td style="text-align:left">作者评论无标识</td></tr><tr><td style="text-align:left"><a href="">livere</a></td><td style="text-align:center">4</td><td style="text-align:left">多种账号登陆</td><td style="text-align:left">评论无法导出</td></tr><tr><td style="text-align:left"><a href="">畅言</a></td><td style="text-align:center">3</td><td style="text-align:left">美观</td><td style="text-align:left">必须备份域名</td></tr><tr><td style="text-align:left"><a href="">Disqus</a></td><td style="text-align:center">1</td><td style="text-align:left"></td><td style="text-align:left">需要翻*墙</td></tr></tbody></table><h4 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h4><p>1.1 获取APP ID和APP Key<br>请先登陆或注册LearnCloud，进入控制台后点击创建应用，<br>进入刚刚创建的应用，选择左下角的设置&gt;应用Key，然后就能看到你的APP ID和APP Key了。</p><p>1.2 填写APP ID 和 APP Key到主题配置文件<code>_config.yml</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Valine</span><br><span class="line"># You can get your appid and appkey from https://leancloud.cn</span><br><span class="line"># More info available at https://valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  enable: true </span><br><span class="line">  appid:  hD6toShsJcsEQR6gT2iaw58b-gzGzoHsz </span><br><span class="line">  appkey:  Xn8ohIhFuwNcsDqVdPD6baA2 </span><br><span class="line">  notify: true </span><br><span class="line">  verify: false </span><br><span class="line">  placeholder: ヾﾉ≧∀≦)o来啊，快活啊! //评论框内的水印文字</span><br><span class="line">  avatar: mm </span><br><span class="line">  guest_info: nick,mail,link //评论所需信息</span><br><span class="line">  pageSize: 10 </span><br><span class="line">  visitor: false </span><br><span class="line">  comment_count: true</span><br></pre></td></tr></table></figure></p><p>1.3 运行hexo g&amp;&amp;hexo d推送到博客。</p><h3 id="错误分析"><a href="#错误分析" class="headerlink" title="错误分析"></a>错误分析</h3><p>如果你使用Hexo遇到同样的问题,这里有一些常见问题的解决方案。</p><h4 id="YAML-Parsing-Error"><a href="#YAML-Parsing-Error" class="headerlink" title="YAML Parsing Error"></a>YAML Parsing Error</h4><ol><li>参数中包含冒号，请用加引号，如<code>Last updated: %s</code></li><li>字段后面的冒号必须为英文冒号，如：<code>last_updated:</code></li><li>字段冒号后面必须跟一个空格，如：<code>last_updated: “Last updated: %s”</code></li></ol><h4 id="Server-Problems"><a href="#Server-Problems" class="headerlink" title="Server Problems"></a>Server Problems</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure><p>你可能使用相同的端口，同时开启了两个Hexo服务器。如果需要同时开启，可以尝试修改端口设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></table></figure></p><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><h4 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h4><p>输入命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure></p><p>参数说明</p><ul><li>[layout]可以分为以下三种</li></ul><table><thead><tr><th style="text-align:center">参数名</th><th style="text-align:left">功能</th><th style="text-align:left">文章路径</th></tr></thead><tbody><tr><td style="text-align:center">post</td><td style="text-align:left">新建博文</td><td style="text-align:left">source/post</td></tr><tr><td style="text-align:center">page</td><td style="text-align:left">新建页面(如404，标签等)</td><td style="text-align:left">source</td></tr><tr><td style="text-align:center">draft</td><td style="text-align:left">草稿</td><td style="text-align:left">source/draft</td></tr></tbody></table><p>草稿可以通过以下命令发布<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure></p><ul><li>title不是博文标题，而是博文md文件名字。</li></ul><h4 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h4><ul><li><p>创建模板<br>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new blog “simon”</span><br></pre></td></tr></table></figure><p>  在执行这行指令时，Hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>blog.md</code>，并根据其内容建立文章。</p></li><li>修改参数<br>以下是您可以在模版中使用的变量：</li></ul><table><thead><tr><th style="text-align:center">变量</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">layout</td><td style="text-align:center">布局</td></tr><tr><td style="text-align:center">title</td><td style="text-align:center">标题</td></tr><tr><td style="text-align:center">date</td><td style="text-align:center">文章建立日期</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/lipses/image_hosting/raw/blog/hexo_head.png&quot; alt=&quot;hexo_head.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Github-Hexo搭建博客&quot;&gt;&lt;a href=&quot;#Github-Hexo搭建博客&quot; class=&quot;headerlink&quot; title=&quot;Github+Hexo搭建博客&quot;&gt;&lt;/a&gt;Github+Hexo搭建博客&lt;/h1&gt;
    
    </summary>
    
      <category term="分享" scheme="https://lipses.github.io/categories/share/"/>
    
    
      <category term="前端" scheme="https://lipses.github.io/tags/fore-end/"/>
    
      <category term="hexo" scheme="https://lipses.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Magisk</title>
    <link href="https://lipses.github.io/development/Magisk/"/>
    <id>https://lipses.github.io/development/Magisk/</id>
    <published>2019-01-24T02:28:50.000Z</published>
    <updated>2019-02-10T07:02:32.802Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/lipses/image_hosting/raw/blog/magisk_head.png" alt="magisk_head.png"></p><h1 id="Magisk"><a href="#Magisk" class="headerlink" title="Magisk"></a>Magisk</h1><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Magisk，以不触动/system的方式修改/system，继Super SU systemless化后的新发展。</p><p>作者<a href="https://forum.xda-developers.com/apps/magisk/official-magisk-v7-universal-systemless-t3473445" target="_blank" rel="noopener">topjohnwu</a> ,<i class="fa fa-github"><a href="https://github.com/topjohnwu/Magisk" target="_blank" rel="noopener">Github</a></i></p><h2 id="特性介绍"><a href="#特性介绍" class="headerlink" title="特性介绍"></a>特性介绍</h2><h3 id="Magic-Mount"><a href="#Magic-Mount" class="headerlink" title="Magic Mount:"></a>Magic Mount:</h3><p>此特性不仅允许用户替换/system目录下已经存在的文件及文件夹，同时也支持创建/system原本不存在的文件及文件夹。当然，实际上并不修改原来的/system.<br>这意味之前的修改模块(zip刷机包)基本都可以在这种systemless-ly模式下工作。</p><h3 id="Multiple-Entry-Points"><a href="#Multiple-Entry-Points" class="headerlink" title="Multiple Entry Points:"></a>Multiple Entry Points:</h3><p>如果“Magic Mount”还不能完成实现你的需求，Magisk在系统启动过程中提供了几个暂停点来运行你的脚本，使开发者可以在任何需要的时候实现所需的功能。在启动过程被暂停后，直到你的脚本被执行前，Magisk都可以可靠地阻断启动过程的继续。</p><h3 id="Magisk-Manager"><a href="#Magisk-Manager" class="headerlink" title="Magisk Manager:"></a>Magisk Manager:</h3><p>Magisk Manager这款app可以帮助你管理root状态，以及管理所有的Magisk模块(模块管理功能还在开发中)，就像Xposed模块一样。</p><h3 id="Special-“Cache”-Mode"><a href="#Special-“Cache”-Mode" class="headerlink" title="Special “Cache” Mode:"></a>Special “Cache” Mode:</h3><p>这种模式支持在system props被加载前运行，这意味Magisk能更多的可能性。<br>systemless hosts 默认开启，各种修改hosts的广告屏蔽软件无需修改就可以直接使用此systemless模式。<br>Magisk还将会移除 system verify和 forceencrypt(二者均可以通过.magisk文件手动配置), 并且修改sepolicy使得脚本运行正常。<br>这意味着开发者以后无需担心boot.img的修改问题。<br>一些主要的系统修改，如root和Xposed等，都可以依赖于Magisk.<br>magisk.img(所有systemless模块存储在此文件内)支持自动调节文件大小以适应较大体积模块，同时也可以在某些模块移除后自动缩小大小。</p><p><code>tips</code></p><blockquote><ol><li>建议配合phh’s SuperUser(原帖内附带的修改版)来使用，这样systemless特性最低支持到Android 5.0，同时还可以在开机后一键关闭root；Chainfire的SuperSU(使用原帖修改版)systemless最低支持5.1，暂不支持开机后一键关闭root。一键关闭root主要为了Android pay的使用，不使用Android pay的话这两种root方式没太大区别。</li><li>systemless Xposed需要对应版本呢，安装器对应material版。<br><a href="http://coolapk.com/r/2ord" target="_blank" rel="noopener">http://coolapk.com/r/2ord</a> </li><li>systemless ViPER4Android，原帖仅提供驱动systemless安装，刷入后在安装apk即可。</li></ol></blockquote><h3 id="模块分享"><a href="#模块分享" class="headerlink" title="模块分享"></a>模块分享</h3>]]></content>
    
    <summary type="html">
    
      Magisk，以不触动/system的方式修改/system，继Super SU systemless化后的新发展。
    
    </summary>
    
      <category term="开发" scheme="https://lipses.github.io/categories/development/"/>
    
    
      <category term="Magisk" scheme="https://lipses.github.io/tags/Magisk/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lipses.github.io/development/hello-world/"/>
    <id>https://lipses.github.io/development/hello-world/</id>
    <published>2019-01-23T07:06:00.000Z</published>
    <updated>2019-02-10T07:02:32.810Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>！这是你的第一篇文章。查看<a href="https://hexo.io/docs/" target="_blank" rel="noopener">文档</a>以获取更多信息。如果您在使用Hexo时遇到任何问题，可以在<a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">故障排除</a>中找到答案，或者您可以在<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>上询问我。<br><a id="more"></a></p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="创建一个新帖子"><a href="#创建一个新帖子" class="headerlink" title="创建一个新帖子"></a>创建一个新帖子</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="运行服务"><a href="#运行服务" class="headerlink" title="运行服务"></a>运行服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欢迎来到&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;！这是你的第一篇文章。查看&lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文档&lt;/a&gt;以获取更多信息。如果您在使用Hexo时遇到任何问题，可以在&lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;故障排除&lt;/a&gt;中找到答案，或者您可以在&lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;上询问我。&lt;br&gt;
    
    </summary>
    
      <category term="开发" scheme="https://lipses.github.io/categories/development/"/>
    
    
      <category term="前端" scheme="https://lipses.github.io/tags/fore-end/"/>
    
      <category term="hexo" scheme="https://lipses.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
