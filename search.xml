<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[git]]></title>
    <url>%2Fdevelopment%2Fgit%2F</url>
    <content type="text"><![CDATA[实际项目开发中，我们经常会用一些版本控制器来托管自己的代码，今天就来总结下Git的相关用法 git工具下载安装git命令使用详解git基本信息配置123git config -- global user.name &apos;你再github上注册的用户名&apos;;//设置用户名git config -- global user.email &apos;注册时候的邮箱&apos;; //设置用户邮箱git config --list //配置ok之后，我们用如下命令来看看是否配置成功 SSH密钥创建初始化一个git仓库 创建文件夹 方法一:可以鼠标右键&gt;点击新建文件夹 方法二:使用命令mkdir &lt;floder name&gt; 在文件夹内初始化git12cd &lt;floder name&gt; //进入刚创建的文件夹目录git init //使用git初始化该文件夹 向git仓库里添加文件 方法一:直接在该文件夹内右键鼠标创建文件或文件夹 方法二:使用命令touch &lt;file name&gt;创建文件 git克隆远程仓库克隆默认分支1git clone &lt;仓库地址&gt; 克隆指定分支1git clone -b &lt;仓库指定分支&gt; &lt;仓库地址&gt; git本地仓库同步到远程仓库 查看仓库状态: 1git status 添加到暂存区: 1git add &lt;文件名&gt; //若是添加所有文件直接输入git add . 提交到本地仓库: 1git commit -m `&lt;提交信息&gt;` 由本地仓库push到远程仓库 1git push //上传到指定分支git push origin &lt;指定分支&gt; 错误解决方法: 出现提交错误信息 12git commit -m `&lt;提交信息&gt;`fatal: could not open `.git/COMMIT_EDITMSG`: Permisssion denide 解决:这是通过Git GUI进行提交时发生的错误，由 .git 文件夹中的文件被设为“只读”所致，将 .git 文件夹下的所有文件、文件夹及其子文件的只读属性去掉即可. 如果出现无法同步或没有权限解决:用户名和密码一定要和github上的一致. 分支管理查看分支12345git branch -a* hexo //显示我们正处于hexo分支下 remotes/origin/HEAD -&gt; origin/master//显示默认分支 remotes/origin/hexo remotes/origin/master//其他两个分支 创建分支1git checkout -b &lt;创建分支&gt; git checkout命令加上-b参数表示创建并切换,相当于以下两条命令:12git branch &lt;创建分支&gt;git checkout &lt;创建分支&gt; 然后可以使用git branch -a查看当前分支,验证是否创建成功.最后再同步到远程仓库即可 删除分支1git push origin --delete &lt;指定分支&gt;]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python中pip的使用]]></title>
    <url>%2Fdevelopment%2Fpip%2F</url>
    <content type="text"><![CDATA[在python的学习过程中，肯定会遇到很多安装模块的地方，可以使用easy_install安装，但是easy_install相对于pip而言，最大的缺陷就是它所安装的模块是不能够卸载的，其他功能是和pip一样的。 下载安装pip下载pip下载pip安装py脚本 右键另存为或者直接运行命令1curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py 安装pip1python get-pip.py pip使用详解pip安装模块包123pip install &lt;package name&gt; //使用命令安装[...]successfully installed &lt;package-name&gt; pip查看已安装的包列表1234pip list //显示已安装包列表Package Version------- -------[...] pip检查那些包需要更新1234pip list --outdated //显示需要更新的包Package Version Latest Type------- ------- ------ -----[...] pip更新包1234567pip install --upgrade &lt;package name&gt;[...]Installing collected packages: &lt;package name&gt; Found existing installation: &lt;old version package name&gt; Uninstalling &lt;old version package name&gt; Successfully uninstalled &lt;new version package name&gt;Successfully installed &lt;new version package name&gt; pip卸载包12345pip uninstall &lt;package name&gt;Uninstalling &lt;package name&gt;: Would remove: [,,,]Proceed (y/n)?]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo+github搭建博客]]></title>
    <url>%2Fshare%2Fhexo-establish%2F</url>
    <content type="text"><![CDATA[Github+Hexo搭建博客 博客搭建准备环境 Node.js下载并安装 Git下载并安装 安装Hexo，在命令行（即Git Bash）内输入命令：$ npm install -g hexo-cli 初始化Hexo，并安装其依赖包在命令行（即Git Bash）中输入命令： 123$ hexo init &lt;floder&gt;$ cd &lt;floder&gt;$ npm install 新建完成后，在路径下（即），会产生以下文件和文件夹 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 注： hexo相关命令均在站点目录下，用Git Bash运行。 站点配置文件：站点目录下的_config.yml。 ​ 路径为_config.yml` 主题配置文件：站点目录下的themes文件夹下的，主题文件夹下的_config.yml。​ 路径为&lt;folder&gt;\themes\&lt;主题文件夹&gt;\_config.yml 启动服务器。在路径下，命令行（即Git Bash）输入以下命令，运行即可：hexo server //也可简写为 hexo s 浏览器访问：http://localhost:4000/ 主题优化选择主题Hexo默认主题为landscape，推荐以下主题： snippet next BlueLake Jsimple 更多主题详见(https://github.com/search?q=hexo-theme) 应用主题 下载主题 将下载好的主题文件夹复制到站点目录下的themes文件夹下。 更改站点配置文件_config.yml的theme字段，更改为主题文件夹名称： 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: &lt;主题文件夹的名称&gt; 主题优化添加背景图在 themes/&lt;thenme floder&gt;/source/css/_custom/custom.styl 中添加如下代码：1234567body&#123; background:url(/images/bg.jpg); //背景图片所在目录 background-size:cover; background-repeat:no-repeat; background-attachment:fixed; background-position:center;&#125; 修改Logo字体在 themes/&lt;theme floder&gt;/source/css/_custom/custom.styl 中添加如下代码：12345678@font-face &#123; font-family: Zitiming; src: url(&apos;/fonts/Zitiming.ttf&apos;); &#125;//导入自定义字体 .site-title &#123; font-size: 40px !important; font-family: &apos;Zitiming&apos; !important; &#125;//应用字体到Logo 自定义鼠标样式打开themes/&lt;theme floder&gt;/source/css/_custom/custom.styl,在里面写下如下代码：1234567// 鼠标样式 * &#123; cursor: url(&quot;/images/cursor.ico&quot;),auto!important //将鼠标样式icon图片放置于themes\next\source\images目录下 &#125; :active &#123; cursor: url(&quot;/images/cursor_active.ico&quot;),auto!important //将鼠标激活样式icon图片放置于themes\next\source\images目录下 &#125; 注： 鼠标样式图片格式必须为icon 修改访问URL路径默认情况下访问URL路径为：domain/2019/01/23/hexo-establish,修改为domain/share/hexo-establish。 编辑 Hexo 站点下的_config.yml文件，修改其中的permalink字段：1permalink: :category/:title/ 博文置顶 安装插件 12$ npm uninstall hexo-generator-index --save$ npm install hexo-generator-index-pin-top --save 然后在需要置顶的文章的Front-matter中加上top即可： 123456---title: 2019date: 2019-01-23 16:10:03top: 10--- 设置置顶标志打开：/themes/&lt;theme floder&gt;/layout/_macro/post.swig，定位到&lt;div class=&quot;post-meta&quot;&gt;标签下,插入以下代码即可： 12345&#123;% if post.top %&#125; &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt; &lt;font color=7D26CD&gt;置顶&lt;/font&gt; &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;&#123;% endif %&#125; 在右上角或者左上角实现fork me on github 选择样式GitHub Ribbons, 修改图片跳转链接,将&lt;a href=&quot;https://github.com/you&quot;&gt;中的链接换为自己Github链接： 打开 themes/next/layout/_layout.swig 文件，把代码复制到&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;下面。 插件配置评论系统 推荐指数 优点 缺点 Valine 4 每天30000条评论，10GB的储存 作者评论无标识 livere 4 多种账号登陆 评论无法导出 畅言 3 美观 必须备份域名 Disqus 1 需要翻*墙 Valine1.1 获取APP ID和APP Key请先登陆或注册LearnCloud，进入控制台后点击创建应用，进入刚刚创建的应用，选择左下角的设置&gt;应用Key，然后就能看到你的APP ID和APP Key了。 1.2 填写APP ID 和 APP Key到主题配置文件_config.yml123456789101112131415# Valine# You can get your appid and appkey from https://leancloud.cn# More info available at https://valine.js.orgvaline: enable: true appid: hD6toShsJcsEQR6gT2iaw58b-gzGzoHsz appkey: Xn8ohIhFuwNcsDqVdPD6baA2 notify: true verify: false placeholder: ヾﾉ≧∀≦)o来啊，快活啊! //评论框内的水印文字 avatar: mm guest_info: nick,mail,link //评论所需信息 pageSize: 10 visitor: false comment_count: true 1.3 运行hexo g&amp;&amp;hexo d推送到博客。 错误分析如果你使用Hexo遇到同样的问题,这里有一些常见问题的解决方案。 YAML Parsing Error 参数中包含冒号，请用加引号，如Last updated: %s 字段后面的冒号必须为英文冒号，如：last_updated: 字段冒号后面必须跟一个空格，如：last_updated: “Last updated: %s” Server Problems1Error: listen EADDRINUSE 你可能使用相同的端口，同时开启了两个Hexo服务器。如果需要同时开启，可以尝试修改端口设置：1$ hexo server -p 5000 常用操作创建文章输入命令1$ hexo new [layout] &lt;title&gt; 参数说明 [layout]可以分为以下三种 参数名 功能 文章路径 post 新建博文 source/post page 新建页面(如404，标签等) source draft 草稿 source/draft 草稿可以通过以下命令发布1$ hexo publish [layout] &lt;title&gt; title不是博文标题，而是博文md文件名字。 文章模板 创建模板在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如： 1$ hexo new blog “simon” 在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 blog.md，并根据其内容建立文章。 修改参数以下是您可以在模版中使用的变量： 变量 描述 layout 布局 title 标题 date 文章建立日期]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Magisk]]></title>
    <url>%2Fdevelopment%2FMagisk%2F</url>
    <content type="text"><![CDATA[Magisk 简介Magisk，以不触动/system的方式修改/system，继Super SU systemless化后的新发展。 作者topjohnwu ,Github 特性介绍Magic Mount:此特性不仅允许用户替换/system目录下已经存在的文件及文件夹，同时也支持创建/system原本不存在的文件及文件夹。当然，实际上并不修改原来的/system.这意味之前的修改模块(zip刷机包)基本都可以在这种systemless-ly模式下工作。 Multiple Entry Points:如果“Magic Mount”还不能完成实现你的需求，Magisk在系统启动过程中提供了几个暂停点来运行你的脚本，使开发者可以在任何需要的时候实现所需的功能。在启动过程被暂停后，直到你的脚本被执行前，Magisk都可以可靠地阻断启动过程的继续。 Magisk Manager:Magisk Manager这款app可以帮助你管理root状态，以及管理所有的Magisk模块(模块管理功能还在开发中)，就像Xposed模块一样。 Special “Cache” Mode:这种模式支持在system props被加载前运行，这意味Magisk能更多的可能性。systemless hosts 默认开启，各种修改hosts的广告屏蔽软件无需修改就可以直接使用此systemless模式。Magisk还将会移除 system verify和 forceencrypt(二者均可以通过.magisk文件手动配置), 并且修改sepolicy使得脚本运行正常。这意味着开发者以后无需担心boot.img的修改问题。一些主要的系统修改，如root和Xposed等，都可以依赖于Magisk.magisk.img(所有systemless模块存储在此文件内)支持自动调节文件大小以适应较大体积模块，同时也可以在某些模块移除后自动缩小大小。 tips 建议配合phh’s SuperUser(原帖内附带的修改版)来使用，这样systemless特性最低支持到Android 5.0，同时还可以在开机后一键关闭root；Chainfire的SuperSU(使用原帖修改版)systemless最低支持5.1，暂不支持开机后一键关闭root。一键关闭root主要为了Android pay的使用，不使用Android pay的话这两种root方式没太大区别。 systemless Xposed需要对应版本呢，安装器对应material版。http://coolapk.com/r/2ord systemless ViPER4Android，原帖仅提供驱动systemless安装，刷入后在安装apk即可。 模块分享]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>Magisk</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fdevelopment%2Fhello-world%2F</url>
    <content type="text"><![CDATA[欢迎来到Hexo！这是你的第一篇文章。查看文档以获取更多信息。如果您在使用Hexo时遇到任何问题，可以在故障排除中找到答案，或者您可以在GitHub上询问我。 快速开始创建一个新帖子1$ hexo new "My New Post" 更多信息: Writing 运行服务1$ hexo server 更多信息: Server 生成静态文件1$ hexo generate 更多信息: Generating 部署到远程站点1$ hexo deploy 更多信息: Deployment]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
